/**
 * 
 */
package integracion.aulas;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

import negocio.aulas.TransferAula;

/** 
 * <!-- begin-UML-doc -->
 * <!-- end-UML-doc -->
 * @author Andrei Ionut Vaduva
 * @generated "UML a Java (com.ibm.xtools.transform.uml2.java5.internal.UML2JavaTransform)"
 */
public class DAOAulaImp implements DAOAula {

	/** 
	 * <!-- begin-UML-doc -->
	 * <!-- end-UML-doc -->
	 * @generated "UML a Java (com.ibm.xtools.transform.uml2.java5.internal.UML2JavaTransform)"
	 */
	private Scanner scanner;

	/** 
	 * <!-- begin-UML-doc -->
	 * <!-- end-UML-doc -->
	 * @generated "UML a Java (com.ibm.xtools.transform.uml2.java5.internal.UML2JavaTransform)"
	 */
	private FileWriter fileWriter;

	/** 
	 * <!-- begin-UML-doc -->
	 * <!-- end-UML-doc -->
	 * @generated "UML a Java (com.ibm.xtools.transform.uml2.java5.internal.UML2JavaTransform)"
	 */
	private File file;

	private String contador = "contador.txt";

	public DAOAulaImp() {
		scanner = null;
		fileWriter = null;
		file = null;
	}

	public void modificar() {

	}

	/** 
	 * (sin Javadoc)
	 * @see DAOAula#leerPorNombre(String nombre)
	 * @generated "UML a Java (com.ibm.xtools.transform.uml2.java5.internal.UML2JavaTransform)"
	 */
	public TransferAula leerPorNombre(String nombre) {
		// begin-user-code
		int cont = 0;
		TransferAula resultado = null;
		String nombDir = "Aulas";
		try {
			file = new File(nombDir + "\\" + contador);
			boolean existe = this.file.exists();

			if (existe) { //Si existe el archivo contador leo, sino devuelvo null
				file = new File(nombDir + "\\" + Integer.toString(cont)
						+ ".txt");
				this.scanner = new Scanner(file);
				String nomb = this.scanner.findInLine(nombre);
				if (nomb != null) {
					try {
						Boolean est = false;
						int cap = Integer.parseInt(this.scanner.nextLine());
						String estado = this.scanner.nextLine();
						if (estado.equals("activo")) {
							est = true;
						}
						resultado = new TransferAula(nomb, cap, cont, est);
					} catch (Exception e) {
					}
				} else
					cont++;
			}
		} catch (Exception e) {
		}
		return resultado;
		// end-user-code
	}

	/** 
	 * (sin Javadoc)
	 * @see DAOAula#escribir(TransferAula tAula)
	 * @generated "UML a Java (com.ibm.xtools.transform.uml2.java5.internal.UML2JavaTransform)"
	 */
	public void escribir(TransferAula tAula) {
		// begin-user-code
		String nombArch = tAula.getId() + ".txt";
		String nombDir = "Aulas";
		TransferAula tRespuesta = leer("contador");

		try {
			this.file = new File(nombArch);
			File dir = new File(nombDir);
			File f = new File(dir + "\\" + contador);
			if (!dir.exists()) {
				dir.mkdir();
				this.fileWriter = new FileWriter(dir + "\\" + contador);
				this.fileWriter.write("0");
				this.fileWriter.close();
			} else if (!f.exists()) {
				this.fileWriter = new FileWriter(dir + "\\" + contador);
				this.fileWriter.write("0");
				this.fileWriter.close();
			} else if (tRespuesta.getId() < tAula.getId()) {
				this.fileWriter = new FileWriter(dir + "\\" + contador);
				this.fileWriter.write(Integer.toString(tAula.getId()));
				this.fileWriter.close();
			}
			this.fileWriter = new FileWriter(dir + "\\" + this.file);
			this.fileWriter.write(tAula.getNombreAula()
					+ System.getProperty("line.separator"));
			this.fileWriter.write(tAula.getCapacidad()
					+ System.getProperty("line.separator"));
			if (tAula.getEstado())
				this.fileWriter.write("activo"
						+ System.getProperty("line.separator"));
			else
				this.fileWriter.write("inactivo"
						+ System.getProperty("line.separator"));

			this.fileWriter.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		// end-user-code
	}

	/** 
	 * (sin Javadoc)
	 * @see DAOAula#leer(String id)
	 * @generated "UML a Java (com.ibm.xtools.transform.uml2.java5.internal.UML2JavaTransform)"
	 */
	public TransferAula leer(String id) {
		// begin-user-code
		TransferAula resultado = null;
		Boolean est = false;
		this.file = new File("Aulas" + "\\" + id + ".txt");
		int cap = -1;
		String estado = null;
		if (this.file.exists()) {
			try {
				this.scanner = new Scanner(this.file);
				String nomb = this.scanner.nextLine();
				if (!id.equals("contador")) {
					cap = Integer.parseInt(this.scanner.nextLine());
					estado = this.scanner.nextLine();
					if (estado.equals("activo"))
						est = true;
				} else {
					id = nomb;
					nomb = null;
				}
				resultado = new TransferAula(nomb, cap, Integer.parseInt(id),
						est);

			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		return resultado;

		// end-user-code
	}

	/** 
	 * (sin Javadoc)
	 * @see DAOAula#baja(TransferAula tAula)
	 * @generated "UML a Java (com.ibm.xtools.transform.uml2.java5.internal.UML2JavaTransform)"
	 */
	public void baja(TransferAula tAula) {
		// begin-user-code
		this.file = new File("Aulas" + "\\" + tAula.getId() + ".txt");
		try {
			this.fileWriter = new FileWriter(this.file);
			this.fileWriter.write(tAula.getNombreAula()
					+ System.getProperty("line.separator"));
			this.fileWriter.write(tAula.getCapacidad()
					+ System.getProperty("line.separator"));
			this.fileWriter.write("inactivo"
					+ System.getProperty("line.separator"));
			this.fileWriter.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		// end-user-code
	}

	/** 
	 * (sin Javadoc)
	 * @see DAOAula#ultimoID()
	 * @generated "UML a Java (com.ibm.xtools.transform.uml2.java5.internal.UML2JavaTransform)"
	 */
	public String ultimoID() {
		// begin-user-code
		String resultado = "";
		this.file = new File("Aulas" + "\\" + contador);
		if (file.exists()) {
			try {
				this.scanner = new Scanner(this.file);
				resultado = this.scanner.nextLine();
			} catch (FileNotFoundException e) {
				e.printStackTrace();
			}
		}
		return resultado;
		// end-user-code
	}
}